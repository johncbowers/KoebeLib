plugins {
    id 'com.google.osdetector' version '1.4.0'    
}

configurations {
    copy
}

repositories {
    mavenCentral()
}

// Library dependencies to download
dependencies {
    copy 'org.python:jython-standalone:2.7.0'
    copy 'com.fifesoft:rsyntaxtextarea:2.6.1'
    copy 'org.jogamp.jogl:jogl-all-main:2.3.2'
    copy 'org.jogamp.gluegen:gluegen-rt-main:2.3.2'
    copy ('org.processing:core:3.3.6') {
        transitive = false
    }
}

task chkJar {
    group 'KoebeLib'
    description 'Ensure that the jar directory exists'

    doLast {
        def f = new File('../lib/jar')
        if (!f.exists()) { f.mkdirs() }
    }
}

task get_nix(type:Exec, dependsOn:chkJar) {
    group 'KoebeLib'
    description 'Downloads CirclePack and extracts cpcore.jar; *nix'

    workingDir 'jar'
    commandLine '../getCirclePack.sh'
}

task get_win(type:Exec, dependsOn:chkJar) {
    group 'KoebeLib'
    description 'Downloads CirclePack and extracts cpcore.jar; Windows'

    workingDir 'jar'
    commandLine 'powershell', '-ExecutionPolicy', 'RemoteSigned', '-c', '../getCirclePack.ps1'
}

task get {
    group 'KoebeLib'
    description 'Detect OS for downloading CirclePack'

    if (osdetector.os == 'windows') {
        dependsOn get_win
    }
    else {
        dependsOn get_nix
    }
}

// Only retrieve CirclePack cpcore.jar if not alread done
def cpcore = new File('../lib/jar/cpcore.jar')
get_nix.onlyIf { !cpcore.exists() }
get_win.onlyIf { !cpcore.exists() }

task copy(type:Copy) {
    group 'KoebeLib'
    description 'Copy dependencies managed in MavenCentral to jar directory'

    into './jar'
    from configurations.copy
}

// Aggregate all dependency managment
task all {
    group 'KoebeLib'
    description 'Downloads all dependencies to jar directory.'

    dependsOn copy
    dependsOn get
}
